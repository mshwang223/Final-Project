<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.spring_boot.FinalProject.dao.IUserDAO">
  	
  	<!-- 로그인 확인 -->
  	<select id="selectUser" parameterType="String" resultType="com.spring_boot.FinalProject.model.UserVO">
  		SELECT * FROM user WHERE userId = #{userId}
  	</select>
  	
  	<!-- 로그인 확인(펫코드) -->
  	<select id="selectUserPetCode" parameterType="String" resultType="com.spring_boot.FinalProject.model.UserVO">
  		SELECT user.* 
		  FROM pet
		  JOIN user ON pet.userId = user.userId
		 WHERE pet.petCode = #{petCode}
  	</select>
  	
  	<!-- 회원 가입 -->
  	<insert id="insertUser" parameterType="com.spring_boot.FinalProject.model.UserVO">
  		INSERT into user
  		(userId, userPw, userName, userEmail)
  		VALUES(#{userId}, #{userPw}, #{userName}, #{userEmail})
  	</insert>
  	
  	<!-- 회원 탈퇴 -->
  	<delete id="deleteUser" parameterType="String">
  		DELETE FROM user WHERE userId = #{userId}
  	</delete>

  	<!-- ID 체크 -->
  	<select id="chkId" parameterType="String" resultType="String">
  		SELECT userId FROM user WHERE userId = #{userId}
  	</select>
  	
  	<!-- Email 체크 -->
  	<select id="chkEmail" parameterType="String" resultType="String">
  		SELECT userEmail FROM user WHERE userEmail = #{userEmail}
  	</select>
  	
  	<!-- Email 확인 -->
  	<select id="confirmEmail" parameterType="String" resultType="String">
  		SELECT userEmail FROM user WHERE userId = #{userId}
  	</select>
  	
	 <!-- 회원정보 수정 -->
    <update id="memberUpdate" parameterType="String">
        UPDATE user SET
        <trim suffixOverrides=",">
            <if test='updatePw != null  and !updatePw.equals("")'>
                userPw=#{updatePw},
            </if>
            <if test='updateEmail != null  and !updateEmail.equals("")'>
                userEmail=#{updateEmail},
            </if>
        </trim>
        WHERE USERID=#{userId}
    </update>
    
    <!-- 프로필 사진 변경 -->
      <update id="updateUserImg" parameterType="String">
        UPDATE user
        SET USERIMG=#{imgName}
        WHERE USERID = #{sid}
    </update>
    
  	<!-- 펫 등록 -->
  	<insert id="insertPet" parameterType="com.spring_boot.FinalProject.model.PetVO">
  		INSERT into pet
  		(userId, petImg, petName, petRace, petAge, petKind, petSize, comment, petCode, endDate)
  		VALUES(#{userId}, #{petImg}, #{petName}, #{petRace}, #{petAge}, 
  			   #{petKind}, #{petSize}, #{comment}, #{petCode}, DATE_ADD(CURRENT_TIMESTAMP, INTERVAL 1 YEAR))
  	</insert>
  	
  	<!-- 펫 등록 확인 -->
  	<select id="selectPet" parameterType="String" resultType="com.spring_boot.FinalProject.model.PetCardVO">
  		SELECT *, user.userName userName 
		  FROM pet
		  JOIN user ON pet.userId = user.userId
		 WHERE pet.petCode = #{petCode}
  	</select>
  	
  	<!-- 업체등록 -->
  	<insert id="insertHotel" parameterType="com.spring_boot.FinalProject.model.InsertHotelVO">
  		INSERT INTO registration
  		(userId, name, zipcode, address1, address2, telNumber, maxManCnt, maxPetCnt,
  		 facility1, facility2, facility3, price, period, serviceImg, comment)
  		 VALUES(#{userId}, #{name}, #{zipcode}, #{address1}, #{address2}, #{telNumber}, #{maxManCnt}, #{maxPetCnt},
  		 		#{facility1}, #{facility2}, #{facility3}, #{price}, #{period}, #{serviceImg}, #{comment})
  	</insert>
</mapper>